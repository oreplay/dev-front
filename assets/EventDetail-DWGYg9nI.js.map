{"version":3,"file":"EventDetail-DWGYg9nI.js","sources":["../../src/pages/Results/pages/EventDetail/components/EventDetailURLButton.tsx","../../src/pages/Results/pages/EventDetail/EventDetail.tsx"],"sourcesContent":["import { Button } from \"@mui/material\"\nimport { Launch } from \"@mui/icons-material\"\nimport React from \"react\"\n\ninterface MyComponentProps {\n  url: string | undefined\n  marginLeft?: string\n  marginRight?: string\n}\n\nconst EditeDetailURLButton: React.FC<MyComponentProps> = ({ url, marginLeft, marginRight }) => {\n  // Check if there is an URL\n  if (url) {\n    try {\n      // Check if protocol is missing (starts with `//` or does not contain `://`)\n      if (!/^https?:\\/\\//i.test(url)) {\n        url = \"https://\" + url\n      }\n\n      // Create URL object\n      const urlObject = new URL(url)\n\n      // return button\n      return (\n        <Button\n          style={{\n            marginLeft: marginLeft,\n            marginRight: marginRight,\n          }}\n          sx={{\n            width: \"min-content\",\n            marginTop: \"12px\",\n            textTransform: \"lowercase\",\n            paddingX: 0,\n            color: \"text.secondary\",\n          }}\n          variant=\"text\"\n          onClick={() => {\n            window.open(urlObject, \"_blank\", \"noopener,noreferrer\")\n          }}\n          endIcon={<Launch />}\n        >\n          {urlObject.hostname}\n        </Button>\n      )\n\n      // if URL is invalid don't render anything\n    } catch {\n      return <></>\n    }\n\n    // if URL not provided don't render anything\n  } else {\n    return <></>\n  }\n}\n\nexport default EditeDetailURLButton\n","import { Box, Typography } from \"@mui/material\"\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\"\nimport { useTranslation } from \"react-i18next\"\nimport { ArrowForward } from \"@mui/icons-material\"\nimport { parseDate } from \"../../../../shared/Functions.tsx\"\nimport EventDetailURLButton from \"./components/EventDetailURLButton.tsx\"\nimport NotFoundPage from \"../../../NotFoundError/NotFoundPage.tsx\"\nimport GeneralSuspenseFallback from \"../../../../components/GeneralSuspenseFallback.tsx\"\nimport { useFetchEventDetail } from \"../../services/FetchHooks.ts\"\nimport { STAGE_TYPE_DATABASE_ID } from \"../Results/shared/constants.ts\"\n\nconst styles = {\n  titleEvent: {\n    marginTop: \"6px\",\n    fontWeight: \"bold\",\n    fontSize: \"x-large\",\n    marginLeft: \"48px\",\n    marginRight: \"48px\",\n  },\n  aligns: {\n    marginLeft: \"48px\",\n    marginRight: \"48px\",\n  },\n  listStages: {\n    borderBottom: \"1px solid\",\n    borderColor: \"text.primary\",\n    marginLeft: \"48px\",\n    marginRight: \"48px\",\n    height: \"min-content\",\n    padding: \"24px 0px\",\n  },\n}\n\nexport default function EventDetail() {\n  const { id } = useParams()\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n\n  const { data, isLoading, error, isError } = useFetchEventDetail(id as string)\n\n  const detail = data?.data\n\n  function getDatesOfEvent() {\n    if (detail?.initial_date && detail?.final_date) {\n      const initDateParse = parseDate(detail.initial_date)\n      const finalDateParse = parseDate(detail.final_date)\n\n      if (initDateParse == finalDateParse) {\n        return (\n          <Typography style={styles.aligns} sx={{ color: \"text.secondary\" }}>\n            {initDateParse}\n          </Typography>\n        )\n      } else {\n        return (\n          <Typography style={styles.aligns} sx={{ color: \"text.secondary\" }} marginTop={\"6px\"}>\n            {initDateParse} - {finalDateParse}\n          </Typography>\n        )\n      }\n    }\n    return null\n  }\n\n  if (isLoading) {\n    return <GeneralSuspenseFallback />\n  } else if (isError) {\n    const error_status = error.response?.status\n    if (error_status == 403 || error_status == 404) {\n      return <NotFoundPage />\n    }\n    throw error\n  } else if (detail?.stages.length == 1) {\n    // navigate to stage for single stage events\n    return <Navigate to={`/competitions/${id}/${detail.stages[0].id}`} replace={true} />\n  } else\n    return (\n      <Box width={\"100%\"} height={\"100%\"} display={\"flex\"} flexDirection={\"column\"}>\n        <Box\n          width={\"100%\"}\n          minHeight={\"35%\"}\n          display={\"flex\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n          sx={{\n            bgcolor: \"primary.light\",\n          }}\n        >\n          <Typography style={styles.aligns} sx={{ color: \"text.secondary\", fontSize: \"small\" }}>\n            {detail?.organizer?.name}\n          </Typography>\n          <Typography color={\"secondary.main\"} style={styles.titleEvent}>\n            {detail?.description}\n          </Typography>\n          {getDatesOfEvent()}\n          <EventDetailURLButton\n            url={detail?.website}\n            marginLeft={styles.aligns.marginLeft}\n            marginRight={styles.aligns.marginRight}\n          />\n        </Box>\n        <Box\n          height={\"100%\"}\n          sx={{\n            bgcolor: \"white\",\n          }}\n        >\n          <Box paddingTop={\"48px\"} paddingBottom={5}>\n            <Typography\n              fontWeight={\"bold\"}\n              paddingBottom={\"12px\"}\n              sx={{ fontSize: \"large\" }}\n              style={styles.aligns}\n            >\n              {t(\"Stages\")}\n            </Typography>\n\n            {detail?.stages.map((stage) => {\n              let description = stage.description\n              if (stage.stage_type.id === STAGE_TYPE_DATABASE_ID.Totals) {\n                description = t(\"EventAdmin.Stages.StagesTypes.Totals\")\n              }\n              return (\n                <Box\n                  style={styles.listStages}\n                  sx={{\n                    cursor: \"pointer\",\n                    \"&:hover\": {\n                      backgroundColor: \"#fffbf0\",\n                    },\n                  }}\n                  display={\"flex\"}\n                  justifyContent={\"space-between\"}\n                  key={stage.id}\n                  onClick={() =>\n                    void navigate(`/competitions/${id}/${stage.id}`, {\n                      state: {\n                        eventName: detail?.description,\n                        stageName: stage.description,\n                        stageTypeId: stage.stage_type.id,\n                        singleStage: false,\n                      },\n                    })\n                  }\n                >\n                  <Typography color={\"text.primary\"}>{description}</Typography>\n                  <ArrowForward sx={{ color: \"text.primary\" }} />\n                </Box>\n              )\n            })}\n          </Box>\n        </Box>\n      </Box>\n    )\n}\n"],"names":["EditeDetailURLButton","url","marginLeft","marginRight","test","urlObject","URL","Button","style","sx","width","marginTop","textTransform","paddingX","color","variant","onClick","window","open","endIcon","_jsx","Launch","children","hostname","_Fragment","styles","titleEvent","fontWeight","fontSize","aligns","listStages","borderBottom","borderColor","height","padding","EventDetail","id","useParams","t","useTranslation","navigate","useNavigate","data","isLoading","error","isError","useFetchEventDetail","detail","getDatesOfEvent","initial_date","final_date","initDateParse","parseDate","finalDateParse","Typography","GeneralSuspenseFallback","error_status","response","status","NotFoundPage","stages","length","Navigate","to","replace","_jsxs","Box","display","flexDirection","minHeight","justifyContent","bgcolor","organizer","name","description","EventDetailURLButton","website","paddingTop","paddingBottom","map","stage","stage_type","STAGE_TYPE_DATABASE_ID","Totals","cursor","backgroundColor","state","eventName","stageName","stageTypeId","singleStage","ArrowForward"],"mappings":"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"}