{"version":3,"file":"Authentication-PbpxdjCv.js","sources":["../../src/pages/Administration/pages/Authentication/pages/Authentication.tsx"],"sourcesContent":["import {\n  popStoredLoginCodeVerifier,\n  popStoredLoginState,\n} from \"../../../services/AuthenticationService.ts\"\nimport { Navigate, useSearchParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { useAuth } from \"../../../../../shared/hooks.ts\"\nimport GeneralSuspenseFallback from \"../../../../../components/GeneralSuspenseFallback.tsx\"\n\nfunction MakeRequest(props: { code: string; code_verifier: string }) {\n  const [loading, setLoading] = useState<boolean>(true)\n  const { loginAction } = useAuth()\n\n  useEffect(() => {\n    void loginAction(props.code, props.code_verifier).then(() => {\n      setLoading(false)\n    })\n  }, [loginAction, props.code, props.code_verifier])\n\n  if (loading) {\n    return <GeneralSuspenseFallback />\n  } else {\n    return <Navigate to={\"/Dashboard\"} /> //TODO: Sometimes the application gets crazy because user state is not set yet and an infinate redirection loop happens from here to private route to initsignin and back here.\n  }\n}\n\nexport default function Authentication() {\n  const [searchParams] = useSearchParams()\n  const error = searchParams.get(\"error\")\n  const authenticationCode = searchParams.get(\"code\")\n\n  if (authenticationCode) {\n    const loginState = searchParams.get(\"state\")\n    if (!loginState) {\n      throw new Error(\"State param is missing from URL\")\n    }\n    const storedState = popStoredLoginState()\n    if (decodeURIComponent(loginState) !== storedState) {\n      throw new Error(\n        \"State must be the same, otherwise there is a potential security issue. Stored: \" +\n          storedState +\n          \", but got: \" +\n          decodeURIComponent(loginState),\n      )\n    }\n    // TODO this is called twice in development, we should check why and fix it, to be able to also fix the todo in the pop funcion\n    const loginCodeVerifier = popStoredLoginCodeVerifier()\n    return <MakeRequest code={authenticationCode} code_verifier={loginCodeVerifier} />\n  } else if (error) {\n    // TODO handle the error (for example invalid username and password\n    console.log(\"__authentication_code_provided__ with error\")\n    return <p>An error happened</p>\n  } else {\n    // TODO handle this case in the ui in a nicer way than a redirection to the startpage\n\n    console.log(\"__redirect_out_to_startpage__\")\n    return <Navigate to={\"/\"} />\n  }\n}\n"],"names":["MakeRequest","props","loading","setLoading","useState","loginAction","useAuth","useEffect","code","code_verifier","then","_jsx","GeneralSuspenseFallback","Navigate","to","Authentication","searchParams","useSearchParams","error","get","authenticationCode","loginState","Error","storedState","popStoredLoginState","decodeURIComponent","loginCodeVerifier","popStoredLoginCodeVerifier","console","log","children"],"mappings":"kaASA,SAASA,EAAYC,EAAgD,CACnE,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAkB,EAAI,EAC9C,CAAEC,YAAAA,CAAAA,EAAgBC,EAAAA,EAQxB,OANAC,EAAAA,UAAU,IAAM,CACTF,EAAYJ,EAAMO,KAAMP,EAAMQ,aAAa,EAAEC,KAAK,IAAM,CAC3DP,EAAW,EAAK,CAClB,CAAC,CACH,EAAG,CAACE,EAAaJ,EAAMO,KAAMP,EAAMQ,aAAa,CAAC,EAE7CP,EACKS,EAACC,EAAuB,EAAE,IAEzBC,EAAQ,CAACC,GAAI,YAAA,CAAe,CAExC,CAEA,SAAwBC,GAAiB,CACvC,KAAM,CAACC,CAAY,EAAIC,EAAAA,EACjBC,EAAQF,EAAaG,IAAI,OAAO,EAChCC,EAAqBJ,EAAaG,IAAI,MAAM,EAElD,GAAIC,EAAoB,CACtB,MAAMC,EAAaL,EAAaG,IAAI,OAAO,EAC3C,GAAI,CAACE,EACH,MAAM,IAAIC,MAAM,iCAAiC,EAEnD,MAAMC,EAAcC,EAAAA,EACpB,GAAIC,mBAAmBJ,CAAU,IAAME,EACrC,MAAM,IAAID,MACR,kFACEC,EACA,cACAE,mBAAmBJ,CAAU,CACjC,EAGF,MAAMK,EAAoBC,EAAAA,EAC1B,SAAQ3B,EAAW,CAACQ,KAAMY,EAAoBX,cAAeiB,CAAAA,CAAoB,CACnF,aAAWR,GAETU,QAAQC,IAAI,6CAA6C,IAClD,IAAA,CAAAC,SAAG,mBAAA,CAAoB,IAI9BF,QAAQC,IAAI,+BAA+B,IACnChB,EAAQ,CAACC,GAAI,GAAA,CAAM,EAE/B"}