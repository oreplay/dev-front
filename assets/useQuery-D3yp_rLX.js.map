{"version":3,"file":"useQuery-D3yp_rLX.js","sources":["../../node_modules/react-query/es/core/queryObserver.js","../../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../../node_modules/react-query/es/react/utils.js","../../node_modules/react-query/es/react/useBaseQuery.js","../../node_modules/react-query/es/react/useQuery.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.selectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result, defaultedOptions) {\n    var _this2 = this;\n\n    var trackedResult = {};\n\n    var trackProp = function trackProp(key) {\n      if (!_this2.trackedProps.includes(key)) {\n        _this2.trackedProps.push(key);\n      }\n    };\n\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          trackProp(key);\n          return result[key];\n        }\n      });\n    });\n\n    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n      trackProp('error');\n    }\n\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.computeRefetchInterval = function computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n          data = this.selectResult;\n        } else {\n          try {\n            this.selectFn = options.select;\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.selectResult = data;\n            this.selectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.selectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    var value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","export function shouldThrowError(suspense, _useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, params);\n  } // Allow useErrorBoundary to override suspense's throwing behavior\n\n\n  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors\n\n  return !!suspense;\n}","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nimport { shouldThrowError } from './utils';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    } // Set cache time to 1 if the option has been set to 0\n    // when using suspense to prevent infinite loop of fetches\n\n\n    if (defaultedOptions.cacheTime === 0) {\n      defaultedOptions.cacheTime = 1;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.suspense, defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result, defaultedOptions);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"names":["QueryObserver","_Subscribable","_inheritsLoose","client","options","_this","_proto","shouldFetchOnMount","shouldFetchOn","notifyOptions","prevOptions","prevQuery","mounted","shouldFetchOptionally","nextRefetchInterval","defaultedOptions","query","result","_this2","trackedResult","trackProp","key","_this3","resolve","reject","unsubscribe","_extends","_this4","fetchOptions","_this5","promise","noop","_this6","isServer","isValidTimeout","time","timeUntilStale","timeout","_this$options$refetch","nextInterval","_this7","focusManager","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","prevQueryResult","state","dataUpdatedAt","error","errorUpdatedAt","isFetching","status","isPreviousData","isPlaceholderData","data","fetchOnMount","fetchOptionally","replaceEqualDeep","selectError","getLogger","placeholderData","isStale","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","typedKey","changed","isIncluded","x","isExcluded","shallowEqualObjects","defaultNotifyOptions","action","isCancelledError","_this8","notifyManager","listener","Subscribable","shouldLoadOnMount","field","value","createValue","_isReset","QueryErrorResetBoundaryContext","React","useQueryErrorResetBoundary","shouldThrowError","suspense","_useErrorBoundary","params","useBaseQuery","Observer","mountedRef","_React$useState","forceUpdate","queryClient","useQueryClient","errorResetBoundary","_React$useState2","observer","_ref","useQuery","arg1","arg2","arg3","parsedOptions","parseQueryArgs"],"mappings":"yeAQO,IAAIA,EAA6B,SAAUC,EAAe,CAC/DC,EAAeF,EAAeC,CAAa,EAE3C,SAASD,EAAcG,EAAQC,EAAS,CACtC,IAAIC,EAEJ,OAAAA,EAAQJ,EAAc,KAAK,IAAI,GAAK,KACpCI,EAAM,OAASF,EACfE,EAAM,QAAUD,EAChBC,EAAM,aAAe,CAAA,EACrBA,EAAM,YAAc,KAEpBA,EAAM,YAAW,EAEjBA,EAAM,WAAWD,CAAO,EAEjBC,CACT,CAEA,IAAIC,EAASN,EAAc,UAE3B,OAAAM,EAAO,YAAc,UAAuB,CAC1C,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,CACvC,EAEAA,EAAO,YAAc,UAAuB,CACtC,KAAK,UAAU,SAAW,IAC5B,KAAK,aAAa,YAAY,IAAI,EAE9BC,EAAmB,KAAK,aAAc,KAAK,OAAO,GACpD,KAAK,aAAY,EAGnB,KAAK,aAAY,EAErB,EAEAD,EAAO,cAAgB,UAAyB,CACzC,KAAK,UAAU,QAClB,KAAK,QAAO,CAEhB,EAEAA,EAAO,uBAAyB,UAAkC,CAChE,OAAOE,EAAc,KAAK,aAAc,KAAK,QAAS,KAAK,QAAQ,kBAAkB,CACvF,EAEAF,EAAO,yBAA2B,UAAoC,CACpE,OAAOE,EAAc,KAAK,aAAc,KAAK,QAAS,KAAK,QAAQ,oBAAoB,CACzF,EAEAF,EAAO,QAAU,UAAmB,CAClC,KAAK,UAAY,CAAA,EACjB,KAAK,YAAW,EAChB,KAAK,aAAa,eAAe,IAAI,CACvC,EAEAA,EAAO,WAAa,SAAoBF,EAASK,EAAe,CAC9D,IAAIC,EAAc,KAAK,QACnBC,EAAY,KAAK,aAGrB,GAFA,KAAK,QAAU,KAAK,OAAO,4BAA4BP,CAAO,EAE1D,OAAO,KAAK,QAAQ,QAAY,KAAe,OAAO,KAAK,QAAQ,SAAY,UACjF,MAAM,IAAI,MAAM,kCAAkC,EAI/C,KAAK,QAAQ,WAChB,KAAK,QAAQ,SAAWM,EAAY,UAGtC,KAAK,YAAW,EAChB,IAAIE,EAAU,KAAK,eAEfA,GAAWC,EAAsB,KAAK,aAAcF,EAAW,KAAK,QAASD,CAAW,GAC1F,KAAK,aAAY,EAInB,KAAK,aAAaD,CAAa,EAE3BG,IAAY,KAAK,eAAiBD,GAAa,KAAK,QAAQ,UAAYD,EAAY,SAAW,KAAK,QAAQ,YAAcA,EAAY,YACxI,KAAK,mBAAkB,EAGzB,IAAII,EAAsB,KAAK,yBAE3BF,IAAY,KAAK,eAAiBD,GAAa,KAAK,QAAQ,UAAYD,EAAY,SAAWI,IAAwB,KAAK,yBAC9H,KAAK,sBAAsBA,CAAmB,CAElD,EAEAR,EAAO,oBAAsB,SAA6BF,EAAS,CACjE,IAAIW,EAAmB,KAAK,OAAO,4BAA4BX,CAAO,EAClEY,EAAQ,KAAK,OAAO,cAAa,EAAG,MAAM,KAAK,OAAQD,CAAgB,EAC3E,OAAO,KAAK,aAAaC,EAAOD,CAAgB,CAClD,EAEAT,EAAO,iBAAmB,UAA4B,CACpD,OAAO,KAAK,aACd,EAEAA,EAAO,YAAc,SAAqBW,EAAQF,EAAkB,CAClE,IAAIG,EAAS,KAETC,EAAgB,CAAA,EAEhBC,EAAY,SAAmBC,EAAK,CACjCH,EAAO,aAAa,SAASG,CAAG,GACnCH,EAAO,aAAa,KAAKG,CAAG,CAEhC,EAEA,cAAO,KAAKJ,CAAM,EAAE,QAAQ,SAAUI,EAAK,CACzC,OAAO,eAAeF,EAAeE,EAAK,CACxC,aAAc,GACd,WAAY,GACZ,IAAK,UAAe,CAClB,OAAAD,EAAUC,CAAG,EACNJ,EAAOI,CAAG,CACnB,CACR,CAAO,CACH,CAAC,GAEGN,EAAiB,kBAAoBA,EAAiB,WACxDK,EAAU,OAAO,EAGZD,CACT,EAEAb,EAAO,cAAgB,SAAuBF,EAAS,CACrD,IAAIkB,EAAS,KAEb,OAAO,IAAI,QAAQ,SAAUC,EAASC,EAAQ,CAC5C,IAAIC,EAAcH,EAAO,UAAU,SAAUL,EAAQ,CAC9CA,EAAO,aACVQ,EAAW,EAEPR,EAAO,UAAYb,GAAW,MAAgBA,EAAQ,cACxDoB,EAAOP,EAAO,KAAK,EAEnBM,EAAQN,CAAM,EAGpB,CAAC,CACH,CAAC,CACH,EAEAX,EAAO,gBAAkB,UAA2B,CAClD,OAAO,KAAK,YACd,EAEAA,EAAO,OAAS,UAAkB,CAChC,KAAK,OAAO,cAAa,EAAG,OAAO,KAAK,YAAY,CACtD,EAEAA,EAAO,QAAU,SAAiBF,EAAS,CACzC,OAAO,KAAK,MAAMsB,EAAS,CAAA,EAAItB,EAAS,CACtC,KAAM,CACJ,YAAaA,GAAW,KAAO,OAASA,EAAQ,WACxD,CACA,CAAK,CAAC,CACJ,EAEAE,EAAO,gBAAkB,SAAyBF,EAAS,CACzD,IAAIuB,EAAS,KAETZ,EAAmB,KAAK,OAAO,4BAA4BX,CAAO,EAClEY,EAAQ,KAAK,OAAO,cAAa,EAAG,MAAM,KAAK,OAAQD,CAAgB,EAC3E,OAAOC,EAAM,QAAQ,KAAK,UAAY,CACpC,OAAOW,EAAO,aAAaX,EAAOD,CAAgB,CACpD,CAAC,CACH,EAEAT,EAAO,MAAQ,SAAesB,EAAc,CAC1C,IAAIC,EAAS,KAEb,OAAO,KAAK,aAAaD,CAAY,EAAE,KAAK,UAAY,CACtD,OAAAC,EAAO,aAAY,EAEZA,EAAO,aAChB,CAAC,CACH,EAEAvB,EAAO,aAAe,SAAsBsB,EAAc,CAExD,KAAK,YAAW,EAEhB,IAAIE,EAAU,KAAK,aAAa,MAAM,KAAK,QAASF,CAAY,EAEhE,OAAMA,GAAgB,MAAgBA,EAAa,eACjDE,EAAUA,EAAQ,MAAMC,CAAI,GAGvBD,CACT,EAEAxB,EAAO,mBAAqB,UAA8B,CACxD,IAAI0B,EAAS,KAIb,GAFA,KAAK,kBAAiB,EAElB,EAAAC,GAAY,KAAK,cAAc,SAAW,CAACC,EAAe,KAAK,QAAQ,SAAS,GAIpF,KAAIC,EAAOC,EAAe,KAAK,cAAc,cAAe,KAAK,QAAQ,SAAS,EAG9EC,EAAUF,EAAO,EACrB,KAAK,eAAiB,WAAW,UAAY,CACtCH,EAAO,cAAc,SACxBA,EAAO,aAAY,CAEvB,EAAGK,CAAO,EACZ,EAEA/B,EAAO,uBAAyB,UAAkC,CAChE,IAAIgC,EAEJ,OAAO,OAAO,KAAK,QAAQ,iBAAoB,WAAa,KAAK,QAAQ,gBAAgB,KAAK,cAAc,KAAM,KAAK,YAAY,GAAKA,EAAwB,KAAK,QAAQ,kBAAoB,KAAOA,EAAwB,EAClO,EAEAhC,EAAO,sBAAwB,SAA+BiC,EAAc,CAC1E,IAAIC,EAAS,KAEb,KAAK,qBAAoB,EACzB,KAAK,uBAAyBD,EAE1B,EAAAN,GAAY,KAAK,QAAQ,UAAY,IAAS,CAACC,EAAe,KAAK,sBAAsB,GAAK,KAAK,yBAA2B,KAIlI,KAAK,kBAAoB,YAAY,UAAY,EAC3CM,EAAO,QAAQ,6BAA+BC,EAAa,UAAS,IACtED,EAAO,aAAY,CAEvB,EAAG,KAAK,sBAAsB,EAChC,EAEAlC,EAAO,aAAe,UAAwB,CAC5C,KAAK,mBAAkB,EACvB,KAAK,sBAAsB,KAAK,wBAAwB,CAC1D,EAEAA,EAAO,YAAc,UAAuB,CAC1C,KAAK,kBAAiB,EACtB,KAAK,qBAAoB,CAC3B,EAEAA,EAAO,kBAAoB,UAA6B,CAClD,KAAK,iBACP,aAAa,KAAK,cAAc,EAChC,KAAK,eAAiB,OAE1B,EAEAA,EAAO,qBAAuB,UAAgC,CACxD,KAAK,oBACP,cAAc,KAAK,iBAAiB,EACpC,KAAK,kBAAoB,OAE7B,EAEAA,EAAO,aAAe,SAAsBU,EAAOZ,EAAS,CAC1D,IAAIO,EAAY,KAAK,aACjBD,EAAc,KAAK,QACnBgC,EAAa,KAAK,cAClBC,EAAkB,KAAK,mBACvBC,EAAoB,KAAK,qBACzBC,EAAc7B,IAAUL,EACxBmC,EAAoBD,EAAc7B,EAAM,MAAQ,KAAK,yBACrD+B,EAAkBF,EAAc,KAAK,cAAgB,KAAK,oBAC1DG,EAAQhC,EAAM,MACdiC,EAAgBD,EAAM,cACtBE,EAAQF,EAAM,MACdG,EAAiBH,EAAM,eACvBI,EAAaJ,EAAM,WACnBK,EAASL,EAAM,OACfM,EAAiB,GACjBC,EAAoB,GACpBC,EAEJ,GAAIpD,EAAQ,kBAAmB,CAC7B,IAAIQ,EAAU,KAAK,aAAY,EAC3B6C,EAAe,CAAC7C,GAAWL,EAAmBS,EAAOZ,CAAO,EAC5DsD,EAAkB9C,GAAWC,EAAsBG,EAAOL,EAAWP,EAASM,CAAW,GAEzF+C,GAAgBC,KAClBN,EAAa,GAERH,IACHI,EAAS,WAGf,CAGA,GAAIjD,EAAQ,kBAAoB,CAAC4C,EAAM,kBAAoBD,GAAmB,MAAgBA,EAAgB,YAAcM,IAAW,QACrIG,EAAOT,EAAgB,KACvBE,EAAgBF,EAAgB,cAChCM,EAASN,EAAgB,OACzBO,EAAiB,WAEVlD,EAAQ,QAAU,OAAO4C,EAAM,KAAS,IAE7C,GAAIN,GAAcM,EAAM,QAAUL,GAAmB,KAAO,OAASA,EAAgB,OAASvC,EAAQ,SAAW,KAAK,SACpHoD,EAAO,KAAK,iBAEZ,IAAI,CACF,KAAK,SAAWpD,EAAQ,OACxBoD,EAAOpD,EAAQ,OAAO4C,EAAM,IAAI,EAE5B5C,EAAQ,oBAAsB,KAChCoD,EAAOG,EAAiBjB,GAAc,KAAO,OAASA,EAAW,KAAMc,CAAI,GAG7E,KAAK,aAAeA,EACpB,KAAK,YAAc,IACrB,OAASI,EAAa,CACpBC,EAAS,EAAG,MAAMD,CAAW,EAC7B,KAAK,YAAcA,CACrB,MAIAJ,EAAOR,EAAM,KAInB,GAAI,OAAO5C,EAAQ,gBAAoB,KAAe,OAAOoD,EAAS,MAAgBH,IAAW,WAAaA,IAAW,QAAS,CAChI,IAAIS,EAEJ,GAAKpB,GAAc,MAAgBA,EAAW,mBAAsBtC,EAAQ,mBAAqBwC,GAAqB,KAAO,OAASA,EAAkB,iBACtJkB,EAAkBpB,EAAW,aAE7BoB,EAAkB,OAAO1D,EAAQ,iBAAoB,WAAaA,EAAQ,gBAAe,EAAKA,EAAQ,gBAElGA,EAAQ,QAAU,OAAO0D,EAAoB,IAC/C,GAAI,CACFA,EAAkB1D,EAAQ,OAAO0D,CAAe,EAE5C1D,EAAQ,oBAAsB,KAChC0D,EAAkBH,EAAiBjB,GAAc,KAAO,OAASA,EAAW,KAAMoB,CAAe,GAGnG,KAAK,YAAc,IACrB,OAASF,EAAa,CACpBC,EAAS,EAAG,MAAMD,CAAW,EAC7B,KAAK,YAAcA,CACrB,CAIA,OAAOE,EAAoB,MAC7BT,EAAS,UACTG,EAAOM,EACPP,EAAoB,GAExB,CAEI,KAAK,cACPL,EAAQ,KAAK,YACbM,EAAO,KAAK,aACZL,EAAiB,KAAK,IAAG,EACzBE,EAAS,SAGX,IAAIpC,EAAS,CACX,OAAQoC,EACR,UAAWA,IAAW,UACtB,UAAWA,IAAW,UACtB,QAASA,IAAW,QACpB,OAAQA,IAAW,OACnB,KAAMG,EACN,cAAeP,EACf,MAAOC,EACP,eAAgBC,EAChB,aAAcH,EAAM,kBACpB,iBAAkBA,EAAM,iBACxB,UAAWA,EAAM,gBAAkB,GAAKA,EAAM,iBAAmB,EACjE,oBAAqBA,EAAM,gBAAkBF,EAAkB,iBAAmBE,EAAM,iBAAmBF,EAAkB,iBAC7H,WAAYM,EACZ,aAAcA,GAAcC,IAAW,UACvC,eAAgBA,IAAW,SAAWL,EAAM,gBAAkB,EAC9D,kBAAmBO,EACnB,eAAgBD,EAChB,eAAgBD,IAAW,SAAWL,EAAM,gBAAkB,EAC9D,QAASe,EAAQ/C,EAAOZ,CAAO,EAC/B,QAAS,KAAK,QACd,OAAQ,KAAK,MACnB,EACI,OAAOa,CACT,EAEAX,EAAO,sBAAwB,SAA+BW,EAAQyB,EAAY,CAChF,GAAI,CAACA,EACH,MAAO,GAGT,IAAIsB,EAAgB,KAAK,QACrBC,EAAsBD,EAAc,oBACpCE,EAAgCF,EAAc,8BAMlD,GAJI,CAACC,GAAuB,CAACC,GAIzBD,IAAwB,WAAa,CAAC,KAAK,aAAa,OAC1D,MAAO,GAGT,IAAIE,EAAgBF,IAAwB,UAAY,KAAK,aAAeA,EAC5E,OAAO,OAAO,KAAKhD,CAAM,EAAE,KAAK,SAAUI,EAAK,CAC7C,IAAI+C,EAAW/C,EACXgD,EAAUpD,EAAOmD,CAAQ,IAAM1B,EAAW0B,CAAQ,EAClDE,EAAaH,GAAiB,KAAO,OAASA,EAAc,KAAK,SAAUI,EAAG,CAChF,OAAOA,IAAMlD,CACf,CAAC,EACGmD,EAAaN,GAAiC,KAAO,OAASA,EAA8B,KAAK,SAAUK,EAAG,CAChH,OAAOA,IAAMlD,CACf,CAAC,EACD,OAAOgD,GAAW,CAACG,IAAe,CAACL,GAAiBG,EACtD,CAAC,CACH,EAEAhE,EAAO,aAAe,SAAsBG,EAAe,CACzD,IAAIiC,EAAa,KAAK,cAKtB,GAJA,KAAK,cAAgB,KAAK,aAAa,KAAK,aAAc,KAAK,OAAO,EACtE,KAAK,mBAAqB,KAAK,aAAa,MAC5C,KAAK,qBAAuB,KAAK,QAE7B,CAAA+B,EAAoB,KAAK,cAAe/B,CAAU,EAKtD,KAAIgC,EAAuB,CACzB,MAAO,EACb,GAESjE,GAAiB,KAAO,OAASA,EAAc,aAAe,IAAS,KAAK,sBAAsB,KAAK,cAAeiC,CAAU,IACnIgC,EAAqB,UAAY,IAGnC,KAAK,OAAOhD,EAAS,CAAA,EAAIgD,EAAsBjE,CAAa,CAAC,EAC/D,EAEAH,EAAO,YAAc,UAAuB,CAC1C,IAAIU,EAAQ,KAAK,OAAO,cAAa,EAAG,MAAM,KAAK,OAAQ,KAAK,OAAO,EAEvE,GAAIA,IAAU,KAAK,aAInB,KAAIL,EAAY,KAAK,aACrB,KAAK,aAAeK,EACpB,KAAK,yBAA2BA,EAAM,MACtC,KAAK,oBAAsB,KAAK,cAE5B,KAAK,iBACPL,GAAa,MAAgBA,EAAU,eAAe,IAAI,EAC1DK,EAAM,YAAY,IAAI,GAE1B,EAEAV,EAAO,cAAgB,SAAuBqE,EAAQ,CACpD,IAAIlE,EAAgB,CAAA,EAEhBkE,EAAO,OAAS,UAClBlE,EAAc,UAAY,GACjBkE,EAAO,OAAS,SAAW,CAACC,EAAiBD,EAAO,KAAK,IAClElE,EAAc,QAAU,IAG1B,KAAK,aAAaA,CAAa,EAE3B,KAAK,gBACP,KAAK,aAAY,CAErB,EAEAH,EAAO,OAAS,SAAgBG,EAAe,CAC7C,IAAIoE,EAAS,KAEbC,EAAc,MAAM,UAAY,CAE1BrE,EAAc,WAChBoE,EAAO,QAAQ,WAAa,MAAgBA,EAAO,QAAQ,UAAUA,EAAO,cAAc,IAAI,EAC9FA,EAAO,QAAQ,WAAa,MAAgBA,EAAO,QAAQ,UAAUA,EAAO,cAAc,KAAM,IAAI,GAC3FpE,EAAc,UACvBoE,EAAO,QAAQ,SAAW,MAAgBA,EAAO,QAAQ,QAAQA,EAAO,cAAc,KAAK,EAC3FA,EAAO,QAAQ,WAAa,MAAgBA,EAAO,QAAQ,UAAU,OAAWA,EAAO,cAAc,KAAK,GAIxGpE,EAAc,WAChBoE,EAAO,UAAU,QAAQ,SAAUE,EAAU,CAC3CA,EAASF,EAAO,aAAa,CAC/B,CAAC,EAICpE,EAAc,OAChBoE,EAAO,OAAO,cAAa,EAAG,OAAO,CACnC,MAAOA,EAAO,aACd,KAAM,wBAChB,CAAS,CAEL,CAAC,CACH,EAEO7E,CACT,EAAEgF,CAAY,EAEd,SAASC,EAAkBjE,EAAOZ,EAAS,CACzC,OAAOA,EAAQ,UAAY,IAAS,CAACY,EAAM,MAAM,eAAiB,EAAEA,EAAM,MAAM,SAAW,SAAWZ,EAAQ,eAAiB,GACjI,CAEA,SAASG,EAAmBS,EAAOZ,EAAS,CAC1C,OAAO6E,EAAkBjE,EAAOZ,CAAO,GAAKY,EAAM,MAAM,cAAgB,GAAKR,EAAcQ,EAAOZ,EAASA,EAAQ,cAAc,CACnI,CAEA,SAASI,EAAcQ,EAAOZ,EAAS8E,EAAO,CAC5C,GAAI9E,EAAQ,UAAY,GAAO,CAC7B,IAAI+E,EAAQ,OAAOD,GAAU,WAAaA,EAAMlE,CAAK,EAAIkE,EACzD,OAAOC,IAAU,UAAYA,IAAU,IAASpB,EAAQ/C,EAAOZ,CAAO,CACxE,CAEA,MAAO,EACT,CAEA,SAASS,EAAsBG,EAAOL,EAAWP,EAASM,EAAa,CACrE,OAAON,EAAQ,UAAY,KAAUY,IAAUL,GAAaD,EAAY,UAAY,MAAW,CAACN,EAAQ,UAAYY,EAAM,MAAM,SAAW,UAAY+C,EAAQ/C,EAAOZ,CAAO,CAC/K,CAEA,SAAS2D,EAAQ/C,EAAOZ,EAAS,CAC/B,OAAOY,EAAM,cAAcZ,EAAQ,SAAS,CAC9C,CCliBA,SAASgF,GAAc,CACrB,IAAIC,EAAW,GACf,MAAO,CACL,WAAY,UAAsB,CAChCA,EAAW,EACb,EACA,MAAO,UAAiB,CACtBA,EAAW,EACb,EACA,QAAS,UAAmB,CAC1B,OAAOA,CACT,CACJ,CACA,CAEA,IAAIC,EAA8CC,EAAM,cAAcH,EAAW,CAAE,EAExEI,EAA6B,UAAsC,CAC5E,OAAOD,EAAM,WAAWD,CAA8B,CACxD,ECrBO,SAASG,GAAiBC,EAAUC,EAAmBC,EAAQ,CAEpE,OAAI,OAAOD,GAAsB,WACxBA,EAAkB,MAAM,OAAQC,CAAM,EAI3C,OAAOD,GAAsB,UAAkBA,EAE5C,CAAC,CAACD,CACX,CCLO,SAASG,GAAazF,EAAS0F,EAAU,CAC9C,IAAIC,EAAaR,EAAM,OAAO,EAAK,EAE/BS,EAAkBT,EAAM,SAAS,CAAC,EAClCU,EAAcD,EAAgB,CAAC,EAE/BE,EAAcC,EAAc,EAC5BC,EAAqBZ,EAA0B,EAC/CzE,EAAmBmF,EAAY,4BAA4B9F,CAAO,EAEtEW,EAAiB,kBAAoB,GAEjCA,EAAiB,UACnBA,EAAiB,QAAU+D,EAAc,WAAW/D,EAAiB,OAAO,GAG1EA,EAAiB,YACnBA,EAAiB,UAAY+D,EAAc,WAAW/D,EAAiB,SAAS,GAG9EA,EAAiB,YACnBA,EAAiB,UAAY+D,EAAc,WAAW/D,EAAiB,SAAS,GAG9EA,EAAiB,WAGf,OAAOA,EAAiB,WAAc,WACxCA,EAAiB,UAAY,KAK3BA,EAAiB,YAAc,IACjCA,EAAiB,UAAY,KAI7BA,EAAiB,UAAYA,EAAiB,oBAE3CqF,EAAmB,YACtBrF,EAAiB,aAAe,KAIpC,IAAIsF,EAAmBd,EAAM,SAAS,UAAY,CAChD,OAAO,IAAIO,EAASI,EAAanF,CAAgB,CACnD,CAAC,EACGuF,EAAWD,EAAiB,CAAC,EAE7BpF,EAASqF,EAAS,oBAAoBvF,CAAgB,EA2B1D,GA1BAwE,EAAM,UAAU,UAAY,CAC1BQ,EAAW,QAAU,GACrBK,EAAmB,WAAU,EAC7B,IAAI3E,EAAc6E,EAAS,UAAUxB,EAAc,WAAW,UAAY,CACpEiB,EAAW,SACbE,EAAY,SAAU1B,EAAG,CACvB,OAAOA,EAAI,CACb,CAAC,CAEL,CAAC,CAAC,EAGF,OAAA+B,EAAS,aAAY,EACd,UAAY,CACjBP,EAAW,QAAU,GACrBtE,EAAW,CACb,CACF,EAAG,CAAC2E,EAAoBE,CAAQ,CAAC,EACjCf,EAAM,UAAU,UAAY,CAG1Be,EAAS,WAAWvF,EAAkB,CACpC,UAAW,EACjB,CAAK,CACH,EAAG,CAACA,EAAkBuF,CAAQ,CAAC,EAE3BvF,EAAiB,UAAYE,EAAO,UACtC,MAAMqF,EAAS,gBAAgBvF,CAAgB,EAAE,KAAK,SAAUwF,EAAM,CACpE,IAAI/C,EAAO+C,EAAK,KAChBxF,EAAiB,WAAa,MAAgBA,EAAiB,UAAUyC,CAAI,EAC7EzC,EAAiB,WAAa,MAAgBA,EAAiB,UAAUyC,EAAM,IAAI,CACrF,CAAC,EAAE,MAAM,SAAUN,EAAO,CACxBkD,EAAmB,WAAU,EAC7BrF,EAAiB,SAAW,MAAgBA,EAAiB,QAAQmC,CAAK,EAC1EnC,EAAiB,WAAa,MAAgBA,EAAiB,UAAU,OAAWmC,CAAK,CAC3F,CAAC,EAIH,GAAIjC,EAAO,SAAW,CAACmF,EAAmB,QAAO,GAAM,CAACnF,EAAO,YAAcwE,GAAiB1E,EAAiB,SAAUA,EAAiB,iBAAkB,CAACE,EAAO,MAAOqF,EAAS,gBAAe,CAAE,CAAC,EACpM,MAAMrF,EAAO,MAIf,OAAIF,EAAiB,sBAAwB,YAC3CE,EAASqF,EAAS,YAAYrF,EAAQF,CAAgB,GAGjDE,CACT,CCrGO,SAASuF,GAASC,EAAMC,EAAMC,EAAM,CACzC,IAAIC,EAAgBC,EAAeJ,EAAMC,EAAMC,CAAI,EACnD,OAAOd,GAAae,EAAe5G,CAAa,CAClD","x_google_ignoreList":[0,1,2,3,4]}