{"version":3,"file":"FormControlLabel-pxdMi4gf.js","sources":["../../node_modules/@mui/material/internal/switchBaseClasses.js","../../node_modules/@mui/material/internal/SwitchBase.js","../../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../../node_modules/@mui/material/Checkbox/checkboxClasses.js","../../node_modules/@mui/material/Checkbox/Checkbox.js","../../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { getSwitchBaseUtilityClass } from \"./switchBaseClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase, {\n  name: 'MuiSwitchBase'\n})({\n  padding: 9,\n  borderRadius: '50%',\n  variants: [{\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'start' && ownerState.size !== 'small',\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'end' && ownerState.size !== 'small',\n    style: {\n      marginRight: -12\n    }\n  }]\n});\nconst SwitchBaseInput = styled('input', {\n  name: 'MuiSwitchBase',\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      input: inputProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: SwitchBaseRoot,\n    className: classes.root,\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      component: 'span',\n      ...other\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onFocus: event => {\n        handlers.onFocus?.(event);\n        handleFocus(event);\n      },\n      onBlur: event => {\n        handlers.onBlur?.(event);\n        handleBlur(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      centerRipple: true,\n      focusRipple: !disableFocusRipple,\n      disabled,\n      role: undefined,\n      tabIndex: null\n    }\n  });\n  const [InputSlot, inputSlotProps] = useSlot('input', {\n    ref: inputRef,\n    elementType: SwitchBaseInput,\n    className: classes.input,\n    externalForwardedProps,\n    getSlotProps: handlers => ({\n      onChange: event => {\n        handlers.onChange?.(event);\n        handleInputChange(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      autoFocus,\n      checked: checkedProp,\n      defaultChecked,\n      disabled,\n      id: hasLabelFor ? id : undefined,\n      name,\n      readOnly,\n      required,\n      tabIndex,\n      type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      })\n    }\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(InputSlot, {\n      ...inputSlotProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { mergeSlotProps } from \"../utils/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalInputProps = slotProps.input ?? inputProps;\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: CheckboxRoot,\n    className: clsx(classes.root, className),\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      slots,\n      slotProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      type: 'checkbox',\n      icon: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: icon.props.fontSize ?? size\n      }),\n      checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n        fontSize: indeterminateIcon.props.fontSize ?? size\n      }),\n      disableRipple,\n      slots,\n      slotProps: {\n        input: mergeSlotProps(typeof externalInputProps === 'function' ? externalInputProps(ownerState) : externalInputProps, {\n          'data-indeterminate': indeterminate\n        })\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(RootSlot, {\n    ...rootSlotProps,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","capitalize","composeClasses","SwitchBaseRoot","styled","ButtonBase","SwitchBaseInput","rootShouldForwardProp","SwitchBase","React.forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","slotProps","other","setCheckedState","useControlled","muiFormControl","useFormControl","handleFocus","event","handleBlur","handleInputChange","newChecked","hasLabelFor","externalForwardedProps","RootSlot","rootSlotProps","useSlot","handlers","_a","InputSlot","inputSlotProps","_jsx","CheckBoxOutlineBlankIcon","createSvgIcon","CheckBoxIcon","IndeterminateCheckBoxIcon","getCheckboxUtilityClass","checkboxClasses","indeterminate","color","size","composedClasses","CheckboxRoot","prop","styles","memoTheme","theme","alpha","createSimplePaletteValueFilter","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","inProps","useDefaultProps","iconProp","indeterminateIconProp","disableRipple","className","indeterminateIcon","externalInputProps","clsx","React.cloneElement","mergeSlotProps","getFormControlLabelUtilityClasses","formControlLabelClasses","labelPlacement","error","FormControlLabelRoot","AsteriskComponent","FormControlLabel","componentsProps","control","disableTypography","labelProp","requiredProp","controlProps","key","fcs","formControlState","TypographySlot","typographySlotProps","Typography","label","_jsxs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}