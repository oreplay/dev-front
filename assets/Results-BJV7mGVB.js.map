{"version":3,"mappings":";irBAaA,MAAMA,EAAeC,EAAA,EAEfC,EAA+BC,EAAa,MAAO,CACvD,KAAM,WACN,KAAM,OACN,kBAAmB,CAACC,EAAOC,IAAWA,EAAO,IAC/C,CAAC,EACD,SAASC,GAAqBF,EAAO,CACnC,OAAOG,EAAoB,CACzB,MAAAH,EACA,KAAM,WACN,aAAAJ,CAAA,CACD,CACH,CASA,SAASQ,GAAaC,EAAUC,EAAW,CACzC,MAAMC,EAAgBC,WAAe,QAAQH,CAAQ,EAAE,OAAO,OAAO,EACrE,OAAOE,EAAc,OAAO,CAACE,EAAQC,EAAOC,KAC1CF,EAAO,KAAKC,CAAK,EACbC,EAAQJ,EAAc,OAAS,GACjCE,EAAO,KAAkBG,eAAmBN,EAAW,CACrD,IAAK,aAAaK,CAAK,GACxB,CAAC,EAEGF,GACN,EAAE,CACP,CACA,MAAMI,GAAuBC,IACpB,CACL,IAAK,OACL,cAAe,QACf,OAAQ,MACR,iBAAkB,WAClBA,CAAS,EAEAC,GAAQ,CAAC,CACpB,WAAAC,EACA,MAAAC,CACF,IAAM,CACJ,IAAIhB,EAAS,CACX,QAAS,OACT,cAAe,SACf,GAAGiB,EAAkB,CACnB,MAAAD,CAAA,EACCE,EAAwB,CACzB,OAAQH,EAAW,UACnB,YAAaC,EAAM,YAAY,OAChC,EAAGG,IAAc,CAChB,cAAeA,CAAA,EACf,GAEJ,GAAIJ,EAAW,QAAS,CACtB,MAAMK,EAAcC,EAAmBL,CAAK,EACtCM,EAAO,OAAO,KAAKN,EAAM,YAAY,MAAM,EAAE,OAAO,CAACO,EAAKC,MAC1D,OAAOT,EAAW,SAAY,UAAYA,EAAW,QAAQS,CAAU,GAAK,MAAQ,OAAOT,EAAW,WAAc,UAAYA,EAAW,UAAUS,CAAU,GAAK,QACtKD,EAAIC,CAAU,EAAI,IAEbD,GACN,EAAE,EACCE,EAAkBP,EAAwB,CAC9C,OAAQH,EAAW,UACnB,KAAAO,CAAA,CACD,EACKI,EAAgBR,EAAwB,CAC5C,OAAQH,EAAW,QACnB,KAAAO,CAAA,CACD,EACG,OAAOG,GAAoB,UAC7B,OAAO,KAAKA,CAAe,EAAE,QAAQ,CAACD,EAAYd,EAAOiB,IAAgB,CAEvE,GAAI,CADmBF,EAAgBD,CAAU,EAC5B,CACnB,MAAMI,EAAyBlB,EAAQ,EAAIe,EAAgBE,EAAYjB,EAAQ,CAAC,CAAC,EAAI,SACrFe,EAAgBD,CAAU,EAAII,CAChC,CACF,CAAC,EAmBH5B,EAAS6B,EAAU7B,EAAQiB,EAAkB,CAC3C,MAAAD,CAAA,EACCU,EAnBwB,CAACP,EAAWK,IACjCT,EAAW,WACN,CACL,IAAKe,EAASV,EAAaD,CAAS,GAGjC,CAGL,6BAA8B,CAC5B,OAAQ,GAEV,gCAAiC,CAC/B,CAAC,SAASP,GAAqBY,EAAaC,EAAgBD,CAAU,EAAIT,EAAW,SAAS,CAAC,EAAE,EAAGe,EAASV,EAAaD,CAAS,EACrI,CAKgC,CAAC,CACvC,CACA,OAAAnB,EAAS+B,EAAwBf,EAAM,YAAahB,CAAM,EACnDA,CACT,EACA,SAAwBgC,GAAYC,EAAU,GAAI,CAChD,KAAM,CAEJ,sBAAAC,EAAwBrC,EACxB,cAAAsC,EAAgBlC,GAChB,cAAAmC,EAAgB,YACdH,EACEI,EAAoB,IAIjBC,EAHO,CACZ,KAAM,CAAC,MAAM,GAEcC,GAAQC,EAAqBJ,EAAeG,CAAI,EAAG,EAAE,EAE9EE,EAAYP,EAAsBpB,EAAK,EAoC7C,OAnC2B4B,aAAiB,SAAcC,EAASC,EAAK,CACtE,MAAMC,EAAaV,EAAcQ,CAAO,EAClC5C,EAAQ+C,EAAaD,CAAU,EAC/B,CACJ,UAAAE,EAAY,MACZ,UAAAlC,EAAY,SACZ,QAAAmC,EAAU,EACV,QAAAC,EACA,SAAA7C,EACA,UAAA8C,EACA,WAAAC,EAAa,GACb,GAAGC,CAAA,EACDrD,EACEgB,EAAa,CACjB,UAAAF,EACA,QAAAmC,EACA,WAAAG,CAAA,EAEIE,EAAUhB,EAAA,EAChB,SAAyBI,EAAW,CAClC,GAAIM,EACJ,WAAAhC,EACA,IAAA6B,EACA,UAAWU,EAAKD,EAAQ,KAAMH,CAAS,EACvC,GAAGE,EACH,SAAUH,EAAU9C,GAAaC,EAAU6C,CAAO,EAAI7C,CAAA,CACvD,CACH,CAAC,CASH,CCpKA,MAAMmD,GAAQvB,GAAY,CACxB,sBAAuBwB,EAAO,MAAO,CACnC,KAAM,WACN,KAAM,OACN,kBAAmB,CAACzD,EAAOC,IAAWA,EAAO,KAC9C,EACD,iBAA0ByD,EAAgB,CACxC,MAAOd,EACP,KAAM,WACP,CACH,CAAC,ECPD,SAAwBe,GAAiB3D,EAA8B,CACrE,MAAMC,EAAS,CACb2D,gBAAiB,CACfC,MAAO,iBACPC,SAAU,QACZ,EAGF,SACGC,EAAG,CACFC,GAAI,CACFC,WAAY,OACZC,SAAU,MACVC,SAAU,OACVC,gBAAiB,UACjBC,UAAW,QACXhE,SAEDL,EAAMsE,YACLC,EAAAC,EAAA,CAAAnE,SAAA,CACEoE,EAACC,EAAU,CACTV,GAAI,CACFH,MAAO,iBACPC,SAAU,UACVzD,SAEDL,EAAM2E,UACG,EACX3E,EAAM4E,gBACJF,EAAU,CAACV,GAAI/D,EAAO2D,gBAAgBvD,SAAEL,EAAM4E,cAA0B,EAEzE,EACD,EACD,EAEFL,EAACf,GAAK,CAAC1C,UAAU,SAASmC,QAAS,EAAE5C,SAAA,CACnCoE,EAACC,EAAU,CACTV,GAAI,CACFH,MAAO,iBACPC,SAAU,UACVzD,SAEDL,EAAM6E,UACG,EACZJ,EAACC,EAAU,CAACV,GAAI/D,EAAO2D,gBAAgBvD,SACpCL,EAAM4E,cACH,GAAG5E,EAAM2E,SAAS,MAAM3E,EAAM4E,aAAa,GAC3C,GAAG5E,EAAM2E,SAAS,GACZ,CAAC,EACR,EAEN,CAET,CC5DA,MAAMG,GAAQC,OAAK,IAAAC,EAAA,IAAM,OAAO,qBAA0B,kGAAC,EACrDC,GAAQF,OAAK,IAAAC,EAAA,IAAM,OAAO,qBAA0B,iFAAC,EACrDE,GAAUH,OAAK,IAAAC,EAAA,IAAM,OAAO,uBAA8B,uFAAC,EAC3DG,GAASJ,OAAK,IAAAC,EAAA,IAAM,OAAO,sBAA4B,2EAAC,EAM9D,SAAwBI,GAAkBpF,EAA+B,CACvE,OAAQA,EAAMqF,WACZ,KAAKC,EAAuBR,MAC1B,OAAOL,EAACK,GAAK,EAAE,EACjB,KAAKQ,EAAuBJ,QAC1B,OAAOT,EAACS,GAAO,EAAE,EACnB,KAAKI,EAAuBL,MAC1B,OAAOR,EAACQ,GAAK,EAAE,EACjB,KAAKK,EAAuBH,OAC1B,OAAOV,EAACU,GAAM,EAAE,EAClB,QACE,MAAM,IAAII,MAAM,oBAAoB,EAE1C,CCZA,SAAwBC,IAAU,WAChC,KAAM,CAAEC,KAAMC,IAGR,CAAEC,UAASC,WAAYC,IAGvB,CAAEC,KAAMC,EAAWC,YAAWC,UAASC,SAAUC,EAAoBR,CAAiB,EACtFS,EAAcL,iBAAWD,KACzBxB,GAAuB8B,iBAAaC,OAAOC,SAAU,EACrDC,EAAcH,iBAAaC,OAAOG,KAAMC,GAAUA,EAAMC,KAAOd,GAGrE,GAAII,EACF,OAAOvB,EAACkC,EAAuB,EAAE,KAGxBV,EACT,QAAIC,IAAMU,WAANV,cAAgBW,UAAW,OAAOX,IAAMU,WAANV,cAAgBW,UAAW,IACxDpC,EAACqC,EAAY,EAAE,IAEdC,EAAoB,CAACC,WAAU,GAAE,EAK3C,GAAI,CAACZ,GAAe,CAACG,EACnB,MAAM,IAAIhB,MAAM,gCAAgC,EAGlD,SACG0B,WAAQ,CAACC,SAAUzC,EAACkC,IAAyB,EAAEtG,WAC7C8G,EAAa,CAACD,SAAUzC,EAACsC,IAAsB,EAAE1G,SAAA,CAChDoE,EAACd,GAAgB,CAEfgB,UAAWyB,EAAYgB,YACvBxC,eAAewB,IAAYiB,YAAZjB,cAAuBkB,KACtCzC,UACE0B,EAAYgB,WAAWb,KAAOpB,EAAuBH,OACjDoB,EAAYa,YACZ3B,EAAE,sCAAsC,EAE9CnB,eARK,cAAc8B,EAAYM,EAAE,EASlC,IACAtB,GAAiB,CAEhBC,UAAWkB,iBAAagB,WAAWb,IAD9B,oBAAoBN,iBAAaM,EAAE,EAEzC,CAAC,EACW,EACP,CAGhB","names":["defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","props","styles","useThemePropsDefault","useThemePropsSystem","joinChildren","children","separator","childrenArray","React.Children","output","child","index","React.cloneElement","getSideFromDirection","direction","style","ownerState","theme","handleBreakpoints","resolveBreakpointValues","propValue","transformer","createUnarySpacing","base","acc","breakpoint","directionValues","spacingValues","breakpoints","previousDirectionValue","deepmerge","getValue","mergeBreakpointsInOrder","createStack","options","createStyledComponent","useThemeProps","componentName","useUtilityClasses","composeClasses","slot","generateUtilityClass","StackRoot","React.forwardRef","inProps","ref","themeProps","extendSxProp","component","spacing","divider","className","useFlexGap","other","classes","clsx","Stack","styled","useDefaultProps","EventStageBanner","organizerStyles","color","fontSize","Box","sx","fontWeight","paddingY","paddingX","backgroundColor","textAlign","singleStage","_jsxs","_Fragment","_jsx","Typography","eventName","organizerName","stageName","FootO","lazy","__vitePreload","Relay","Rogaine","Totals","StageTypeSelector","stageType","STAGE_TYPE_DATABASE_ID","Error","Results","t","useTranslation","eventId","stageId","useParams","data","eventData","isLoading","isError","error","useFetchEventDetail","eventDetail","stages","length","stageDetail","find","stage","id","GeneralSuspenseFallback","response","status","NotFoundPage","GeneralErrorFallback","displayMsg","Suspense","fallback","ErrorBoundary","description","organizer","name","stage_type"],"ignoreList":[0,1],"sources":["../../node_modules/@mui/material/node_modules/@mui/system/esm/Stack/createStack.js","../../node_modules/@mui/material/Stack/Stack.js","../../src/pages/Results/pages/Results/components/EventStageBanner.tsx","../../src/pages/Results/pages/Results/components/StageTypeSelector.tsx","../../src/pages/Results/pages/Results/Results.tsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import { Box, Stack, Typography } from \"@mui/material\"\n\ninterface EventStageBannerProps {\n  eventName: string\n  stageName: string\n  organizerName?: string\n  singleStage: boolean\n}\n\nexport default function EventStageBanner(props: EventStageBannerProps) {\n  const styles = {\n    organizerStyles: {\n      color: \"text.secondary\",\n      fontSize: \"small\",\n    },\n  }\n\n  return (\n    <Box\n      sx={{\n        fontWeight: \"bold\",\n        paddingY: \"1em\", // Add left padding for a consistent margin\n        paddingX: \"24px\",\n        backgroundColor: \"#efefef\",\n        textAlign: \"left\", // Ensure all text within this Box is left-aligned\n      }}\n    >\n      {props.singleStage ? (\n        <>\n          <Typography\n            sx={{\n              color: \"secondary.main\",\n              fontSize: \"1.1rem\",\n            }}\n          >\n            {props.eventName}\n          </Typography>\n          {props.organizerName ? (\n            <Typography sx={styles.organizerStyles}>{props.organizerName}</Typography>\n          ) : (\n            \"\"\n          )}\n        </>\n      ) : (\n        <Stack direction=\"column\" spacing={1}>\n          <Typography\n            sx={{\n              color: \"secondary.main\",\n              fontSize: \"1.1rem\",\n            }}\n          >\n            {props.stageName}\n          </Typography>\n          <Typography sx={styles.organizerStyles}>\n            {props.organizerName\n              ? `${props.eventName} — ${props.organizerName}`\n              : `${props.eventName}`}\n          </Typography>\n        </Stack>\n      )}\n    </Box>\n  )\n}\n","import { STAGE_TYPE_DATABASE_ID } from \"../shared/constants.ts\"\nimport { lazy } from \"react\"\nconst FootO = lazy(() => import(\"../pages/FootO/FootO.tsx\"))\nconst Relay = lazy(() => import(\"../pages/Relay/Relay.tsx\"))\nconst Rogaine = lazy(() => import(\"../pages/Rogaine/Rogaine.tsx\"))\nconst Totals = lazy(() => import(\"../pages/Totals/Totals.tsx\"))\n\ntype StageTypeSelectorProps = {\n  stageType: string\n}\n\nexport default function StageTypeSelector(props: StageTypeSelectorProps) {\n  switch (props.stageType) {\n    case STAGE_TYPE_DATABASE_ID.FootO:\n      return <FootO />\n    case STAGE_TYPE_DATABASE_ID.Rogaine:\n      return <Rogaine />\n    case STAGE_TYPE_DATABASE_ID.Relay:\n      return <Relay />\n    case STAGE_TYPE_DATABASE_ID.Totals:\n      return <Totals />\n    default:\n      throw new Error(\"Unknown stage type\")\n  }\n}\n","import { useParams } from \"react-router-dom\"\nimport { useFetchEventDetail } from \"../../services/FetchHooks.ts\"\nimport GeneralSuspenseFallback from \"../../../../components/GeneralSuspenseFallback.tsx\"\nimport NotFoundPage from \"../../../NotFoundError/NotFoundPage.tsx\"\nimport GeneralErrorFallback from \"../../../../components/GeneralErrorFallback.tsx\"\nimport { ErrorBoundary } from \"@sentry/react\"\nimport EventStageBanner from \"./components/EventStageBanner.tsx\"\nimport StageTypeSelector from \"./components/StageTypeSelector.tsx\"\nimport { Suspense } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { STAGE_TYPE_DATABASE_ID } from \"./shared/constants.ts\"\n\nexport default function Results() {\n  const { t } = useTranslation()\n\n  // Get url info\n  const { eventId, stageId } = useParams<string>()\n\n  // Event's and stage's info\n  const { data: eventData, isLoading, isError, error } = useFetchEventDetail(eventId as string)\n  const eventDetail = eventData?.data\n  const singleStage: boolean = eventDetail?.stages.length == 1\n  const stageDetail = eventDetail?.stages.find((stage) => stage.id === stageId)\n\n  // Loading states\n  if (isLoading) {\n    return <GeneralSuspenseFallback />\n\n    // Error states\n  } else if (isError) {\n    if (error.response?.status === 403 || error.response?.status === 404) {\n      return <NotFoundPage />\n    } else {\n      return <GeneralErrorFallback displayMsg />\n    }\n\n    // Component\n  } else {\n    if (!eventDetail || !stageDetail) {\n      throw new Error(\"Event or stage info is missing\")\n    }\n\n    return (\n      <Suspense fallback={<GeneralSuspenseFallback />}>\n        <ErrorBoundary fallback={<GeneralErrorFallback />}>\n          <EventStageBanner\n            key={`StageBanner${eventDetail.id}`}\n            eventName={eventDetail.description}\n            organizerName={eventDetail.organizer?.name}\n            stageName={\n              stageDetail.stage_type.id !== STAGE_TYPE_DATABASE_ID.Totals\n                ? stageDetail.description\n                : t(\"EventAdmin.Stages.StagesTypes.Totals\")\n            }\n            singleStage={singleStage}\n          />\n          <StageTypeSelector\n            key={`StageTypeSelector${eventDetail?.id}`}\n            stageType={stageDetail?.stage_type.id}\n          />\n        </ErrorBoundary>\n      </Suspense>\n    )\n  }\n}\n"],"file":"assets/Results-BJV7mGVB.js"}